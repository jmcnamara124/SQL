-- In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

#1. How many orders were placed in January? 
SELECT COUNT(orderID)
FROM BIT_DB.JanSales 
WHERE length(orderID) = 6
AND orderID<>'Order ID'
;

#2.  How many of those orders are an iPhone?
SELECT COUNT(orderID)
FROM BIT_DB.JanSales 
WHERE length(orderID) = 6
AND orderID<>"Order ID"
AND Product = "iPhone"
;

#3. Select the customer account numbers for all the orders that were placed in February.
SELECT distinct acctnum
FROM BIT_DB.customers as customers

INNER JOIN BIT_DB.FebSales as Feb
ON customers.order_id=Feb.orderID

WHERE length(order_id)=6
;

#4. Which product was the cheapest one sold in January, and what was the price?
SELECT distinct Product, min(price)
FROM BIT_DB.JanSales
ORDER BY price ASC
LIMIT 1
;

#5. What is the total revenue for each product sold in January?
SELECT distinct Product, SUM(Quantity)*price AS Total_Revenue 
FROM BIT_DB.JanSales
GROUP BY Product
;

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT distinct Product
, SUM(Quantity)
, SUM(Quantity)*price AS total_revenue 
FROM BIT_DB.FebSales
WHERE location = "548 Lincoln St, Seattle, WA 98101"
GROUP BY Product
;

#7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT COUNT(distinct customers.acctnum) 
, AVG(Quantity*Price) as avg_amount_spent
FROM BIT_DB.FebSales as Feb
LEFT JOIN BIT_DB.customers as customers
ON customers.order_id=Feb.orderID
WHERE Feb.Quantity>2
AND length(orderid) = 6
AND orderid <> 'Order ID'
;

#8. Select all order dates between February 13th and February 18th 2019. 
SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00'
;

#9. Find the address associated with the order placed at 02/18/19 01:35. 
SELECT location
FROM BIT_DB.FebSales 
WHERE orderdate = '02/18/19 01:35'
;

#10. List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, SUM(quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY Product
;

#11. Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT distinct location, COUNT(orderID) as total_orders
FROM BIT_DB.JanSales 
WHERE length(orderID)=6
AND orderid <> 'Order ID'
AND location like '%NY%'
GROUP BY location
HAVING total_orders>2
;

#12. How many of each type of headphone were sold in February?
SELECT Product, SUM(Quantity)as total_sold
FROM BIT_DB.FebSales
WHERE Product like '%Headphones%'
GROUP BY Product
;

#13. What was the average amount spent per account in February?
SELECT AVG(Quantity*Price) as Avg_spent 
FROM BIT_DB.customers as Customer
LEFT JOIN BIT_DB.FebSales as Feb
ON Customer.order_id = Feb.orderID
WHERE length(orderID)=6
AND orderID<> 'Order ID'
;
#14. What was the average quantity of products purchased per account in February?
SELECT sum(quantity)/count(cust.acctnum)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE length(orderid) = 6 
AND orderid <> 'Order ID'
;
#15. Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT Product
, SUM(Price*Quantity)as Revenue 
FROM BIT_DB.JanSales
GROUP BY Product 
ORDER BY Revenue desc
LIMIT 1
;
